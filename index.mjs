// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-improved-ziggurat@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-exp@esm/index.mjs";var f=u.isPrimitive,c=g.isPrimitive,b=h;var v=function(e,t){return!f(e)||b(e)?new TypeError("invalid argument. `mu` must be a number primitive and not `NaN`. Value: `"+e+"`."):c(t)?null:new TypeError("invalid argument. `sigma` must be a positive number. Value: `"+t+"`.")},x=j;var y=function(e,t,n){return x(t+n*e())},w=e,N=t,L=n,E=s,O=r,T=i,P=o,V=m,G=d.factory,R=a,A=l,J=p,M=v,S=y;var z=function(){var e,t,n,s,r,i,o;if(0===arguments.length)t=G();else if(1===arguments.length){if(!E(n=arguments[0]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",n));if(T(n,"prng")){if(!O(n.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));t=G({prng:n.prng})}else t=G(n)}else{if(i=M(o=arguments[0],e=arguments[1]))throw i;if(arguments.length>2){if(!E(n=arguments[2]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",n));if(T(n,"prng")){if(!O(n.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",n.prng));t=G({prng:n.prng})}else t=G(n)}else t=G()}return r=void 0===o?j:h,s=t.PRNG,w(r,"NAME","lognormal"),n&&n.prng?(w(r,"seed",null),w(r,"seedLength",null),L(r,"state",P(null),V),w(r,"stateLength",null),w(r,"byteLength",null),w(r,"toJSON",P(null))):(N(r,"seed",m),N(r,"seedLength",d),L(r,"state",p,u),N(r,"stateLength",a),N(r,"byteLength",l),w(r,"toJSON",g)),w(r,"PRNG",s),r;function m(){return s.seed}function d(){return s.seedLength}function a(){return s.stateLength}function l(){return s.byteLength}function p(){return s.state}function u(e){s.state=e}function g(){var t={type:"PRNG"};return t.name=r.NAME,t.state=A(s.state),t.params=void 0===o?[]:[o,e],t}function h(){return S(t,o,e)}function j(e,n){return R(e)||R(n)||n<=0?NaN:S(t,e,n)}},k=z(),q=z;e(k,"factory",q);var B=k;export{B as default,q as factory};
//# sourceMappingURL=index.mjs.map
